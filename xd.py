# খানকির পলা স্কিপ্ট নিতে আমার আইডি ডুকসস।।। পারলে স্কিপ্ট ণিয়ে ডেখা
# https://www.github.com/htr-tech
# Time : Sat Dec 16 14:30:01 2023
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))